apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: create-init-bundle
  namespace: stackrox
spec:
  template:
    spec:
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          env:
            - name: ROX_CENTRAL_ENDPOINT
              value: {{ .Values.central.endpoint }} 
            - name: ROX_BUNDLE_NAME
              value:  {{ .Values.clusterName }}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: central-admin
                  key: password
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              if oc get secret/sensor-tls &> /dev/null; then
                echo "Error: cluster-init bundle has already been configured, doing nothing"
                exit 0
              else
              # Wait for central to be ready
              attempt_counter=0
              max_attempts=20
              echo "INFO: Waiting for central to be available..."
              until $(curl -k --output /dev/null --silent --head --fail https://$ROX_CENTRAL_ENDPOINT:443); do
                  if [ ${attempt_counter} -eq ${max_attempts} ];then
                    echo "INFO/ Max attempts reached"
                    exit 1
                  fi

                  printf '.'
                  attempt_counter=$(($attempt_counter+1))
                  echo "INFO: Made attempt $attempt_counter, waiting..."
                  sleep 5
              done

                echo "INFO: The central is available ..."
                echo "INFO: Generating cluster-init bundle"
                export DATA={\"name\":\"$ROX_BUNDLE_NAME\"}
                echo "DATA: $DATA"
                curl -k -o /tmp/bundle.json -X POST -u "admin:$PASSWORD" -H "Content-Type: application/json" --data $DATA https://$ROX_CENTRAL_ENDPOINT:443/v1/cluster-init/init-bundles
                if [ $? -eq 0 ]; then
                    echo "INFO: Retrieve init bundles succeed"
                else
                    echo "Error: Retrieve init bundles failed"
                    exit 1
                fi
                echo "Bundle received"
                cat /tmp/bundle.json

                echo "Applying bundle"
                # No jq in container, python to the rescue
                cat /tmp/bundle.json | python3 -c "import sys, json; print(json.load(sys.stdin)['kubectlBundle'])" | base64 -d | oc apply -f -
                # Touch SecuredCluster to force operator to reconcile
                oc label SecuredCluster local-cluster cluster-init-job-status=created

                echo "INFO: ACS Cluster init bundle generated and applied"
              fi
          imagePullPolicy: Always
          name: create-cluster-init-bundle
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: rhacs-services
      serviceAccountName: rhacs-services
      terminationGracePeriodSeconds: 30
